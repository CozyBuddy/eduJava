package days14;

/**
 * @author user
 * @date 2024. 1. 18. 오전 9:02:30
 * @subject
 * @contents
 */
public class Ex01 {
	public static int age=10; // 멤버변수(필드)
	String name; // 
	public static void main(String[] args) //멤버함수(메서드) {
		//public static int age1 = 10; // 지역변수에서는 접근지정자 기타제어자 설정 불가.
		/*1.객체 지향적 프로그래밍
		 Object Oritented Programming
		 OOP
		 프로그래밍 방법(기법) 중 하나
		 
		 완성된 프로그램 = 객체(Object)의 집합
		 	예)조립된 컴퓨터 = 완성된 프로그램
		 	-머니 
		 	-컴퓨터 구매 목적에 맞춰서 컴퓨터의 구성품 찾음.
		 	-가격비교 -> 구매
		 	-컴퓨터 구성품(CPU, 그래픽카드, 메인보드 등등...) = 시작객체(시작 혹은 종료) + 객체들
		 												 class 선언
		 												 { main(){} 기능,함수
		 												 } ->메인함수가 있는 class 를 시작객체
		 	-컴퓨터 조립
		 	-테스트
		 	-실사용
		 	
		 	예) 생산성 향상.
		 		유지 보수 용이.
		2.객체 지향 언어 - 자바
		3.OOP 특징 (클래스 특징)
			1)캡슐화
			2)은닉화
			3)상속성
			4)다형성
			5)추상화
		
		4. 클래스(Class)= 객체의 설계도
		5. 객체(Object)= 클래스로 실제 존재하는것. 
				사물 (유형) 또는 개념(무형)의 것
		6. 인스턴스(Instance) = 생성된 객체(집)
		7. 인스턴스화 = 클래스(설계도) -> 객체(집)를 생성하는 과정
		
		8. 클래스를 설계하는 과정 
			1) 객체의 구성 요소 (속성, 기능)
				->파악하고 목록 작성
				->2)클래스를 선언						(식별자- 변수,함수명,클래스명 ..)
					형식) [접근지정자][기타제어자] class 클래스명 [extends Super클래스][implements 인터페이스명...] {
					// 클래스의 멤버(클래스 안에 있는 것들을)(객체의 구성 요소)
					// 1)속성property(특징) - 멤버변수 (클래스 안이니까) (=필드 field)
					//   멤버변수 형식) [접근지정자][기타제어자] 자료형 변수명[초기값];
					// 2)기능 function(함수) - 멤버함수(메서드)
					// 
					}
			3) 객체 생성 - 테스트	
			4) 문제점 파악 - 유지,보수
			5) 상용화 - 배포
			6) 버전관리 - 기능 추가, 수정(보안)	
		예) 망치 
			- 용도 : 가정용 
			- 기능 : 못박기,빼기	
			- 가격(비용) : 백만원 -> 안삼.
			- 특징 : 가로,세로 길이,재질,쇠 .. (속성)
				int width;
				int height;
				
		실습) TV 클래스 선언, 객체 생성 사용 예.
			1)목록 작성 완료가정
			2)클래스 선언 
			
		*/
	}

}
